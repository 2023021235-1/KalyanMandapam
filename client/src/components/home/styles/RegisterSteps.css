/* RegisterSteps.css - Styling for Register Steps Section with Theme Colors */

:root {
  --base-color: #FFFFFF;
  --primary-color: #800000;
  --secondary-color: #ff9900;
  --secondary-darker: #e68a00;
  --text-color: #000000;
  --hover-bg: #f0f0f0;
  --card-bg: var(--base-color);
}

.rs-register-steps-section {
  padding: 80px 0;
  background-color: var(--primary-color);
  color: var(--base-color);
}

.rs-container {
  width: 100%;
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 20px;
  box-sizing: border-box; /* Ensure padding is included */
}

.rs-container .rs-title {
  color: var(--base-color);
  text-align: center;
  margin-bottom: 40px;
  font-size: 2rem;
  font-weight: 600;
  line-height: 1.2;
  position: relative;
}

.rs-container .rs-title::after {
  content: '';
  position: absolute;
  bottom: -15px;
  left: 50%;
  transform: translateX(-50%);
  width: 70px;
  height: 3px;
  background: var(--secondary-color);
  border-radius: 2px;
}

.rs-steps-container {
  display: flex;
  flex-wrap: wrap; /* Allow items to wrap to the next line */
  justify-content: center; /* Center items when they wrap */
  gap: 20px; /* Space between flex items */
  margin-bottom: 40px;
}

.rs-step-card {
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
  padding: 20px;
  transition: all 0.3s ease;
  background-color: var(--card-bg);
  border-radius: 8px;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  color: var(--text-color);
  flex: 1 1 250px; /* Allow cards to grow and shrink, with a preferred basis */
  min-width: 200px; /* Minimum width for cards */
  max-width: 280px; /* Maximum width for cards */
  box-sizing: border-box; /* Include padding in the element's total width */
}

.rs-step-card:hover {
   box-shadow: 0 5px 15px rgba(0, 0, 0, 0.15);
   background-color: #f0f0f0;
}

.rs-step-card:hover .rs-step-icon-container {
  transform: scale(1.1);
  box-shadow: 0 0 20px rgba(0, 0, 0, 0.2);
}

.rs-step-icon-container {
  width: 80px;
  height: 80px;
  background: linear-gradient(45deg, var(--secondary-color), var(--secondary-darker));
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  margin-bottom: 20px;
  padding: 15px;
  color: var(--base-color);
  transition: all 0.3s ease;
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
}

.rs-step-icon {
  width: 100%;
  height: 100%;
}

.rs-step-title {
  font-size: 1.2rem;
  margin-bottom: 10px;
  color: var(--primary-color);
  font-weight: 600;
}

.rs-step-description {
  color: var(--text-color);
  max-width: 250px;
  text-align: center;
  margin-bottom: 0;
  width: 100%; /* Ensure description takes full width of card content area */
}

.rs-register-button-container {
  display: flex;
  justify-content: center;
  margin-top: 30px;
}

.rs-btn {
  display: inline-block;
  padding: 12px 25px;
  border-radius: 8px;
  text-decoration: none;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s ease;
  border: none;
  font-size: 1rem;
  text-align: center;
}

.rs-btn-primary {
  background-color: var(--secondary-color);
  color: var(--base-color);
}

.rs-btn-primary:hover {
  background-color: darken(#fff, 10%);
  transform: translateY(-5px);
  box-shadow: 0 6px 15px rgba(0, 0, 0, 0.15);
}


/* Responsive styles */
/* The steps container will now wrap and center automatically due to flex-wrap and justify-content */
/* The previous media query stacking is no longer strictly necessary but can be kept for explicit control */
@media (max-width: 768px) {
  .rs-steps-container {
    flex-direction: column; /* Stack cards vertically on smaller screens */
    align-items: center; /* Center stacked cards */
    gap: 20px; /* Maintain gap */
  }

  .rs-step-card {
    max-width: 350px; /* Allow cards to be wider when stacked */
    width: 100%; /* Take full width up to max-width */
    flex: none; /* Prevent flex-grow/shrink when stacked */
  }

  .rs-step-description {
      text-align: center; /* Keep text centered */
  }
}

/* Keyframes animation */
@keyframes float {
  0% {
    transform: translateY(0px);
  }
  50% {
    transform: translateY(-10px);
  }
  100% {
    transform: translateY(0px);
  }
}